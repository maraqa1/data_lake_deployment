version: "3.9"

services:
  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    container_name: minio
    ports: ["9000:9000", "9001:9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - ./volumes/minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 12

  airbyte-db:
    image: airbyte/db:0.58.0
    container_name: airbyte-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # (no PGDATA needed if we mount the default path)
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data   # <-- mount to default path
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 20


  airbyte-server:
    image: airbyte/server:0.58.0
    container_name: airbyte-server
    depends_on:
      airbyte-db:
        condition: service_healthy
    # EITHER keep your current AIRBYTE_* envs OR switch to DATABASE_*.
    environment:
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_DB: ${POSTGRES_DB}
      DATABASE_HOST: airbyte-db
      DATABASE_PORT: 5432
    ports: ["8000:8000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 30

  airbyte-webapp:
    image: airbyte/webapp:0.58.0
    container_name: airbyte-webapp
    depends_on:
      airbyte-server:
        condition: service_healthy
    ports: ["8001:80"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 30

  airbyte-worker:
    image: airbyte/worker:0.58.0
    container_name: airbyte-worker
    depends_on:
      airbyte-server:
        condition: service_healthy
    restart: unless-stopped

  airbyte-cron:
    image: airbyte/cron:0.58.0
    container_name: airbyte-cron
    depends_on:
      airbyte-server:
        condition: service_healthy
    restart: unless-stopped

networks:
  data_net:
    driver: bridge
